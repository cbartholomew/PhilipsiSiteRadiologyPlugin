#if !defined(AFX_ISITENONVISUAL_H__28D22B36_7376_4372_93B0_1F2DD595C56D__INCLUDED_)
#define AFX_ISITENONVISUAL_H__28D22B36_7376_4372_93B0_1F2DD595C56D__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CiSiteNonVisual wrapper class

class CiSiteNonVisual : public CWnd
{
protected:
	DECLARE_DYNCREATE(CiSiteNonVisual)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xd0be2767, 0xcd10, 0x4b56, { 0x87, 0x95, 0xc6, 0xbc, 0x37, 0xa8, 0x57, 0x2f } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	CString GetISyntaxServerIP();
	void SetISyntaxServerIP(LPCTSTR);
	CString GetISyntaxServerPort();
	void SetISyntaxServerPort(LPCTSTR);
	CString GetImageSuiteURL();
	void SetImageSuiteURL(LPCTSTR);
	CString GetImageSuiteDSN();
	void SetImageSuiteDSN(LPCTSTR);
	long GetCacheSizeMB();
	void SetCacheSizeMB(long);
	CString GetWorkstationLocation();
	void SetWorkstationLocation(LPCTSTR);
	CString GetSecurityCodes();
	void SetSecurityCodes(LPCTSTR);
	BOOL GetInitialized();
	CString GetOptions();
	void SetOptions(LPCTSTR);
	CString GetFailoveriSyntaxServerIP();
	void SetFailoveriSyntaxServerIP(LPCTSTR);

// Operations
public:
	BOOL Initialize();
	BOOL Login(LPCTSTR UserName, LPCTSTR Password, LPCTSTR AuthSource, LPCTSTR Token, LPCTSTR Mnemonic);
	BOOL Logout();
	CString Query(LPCTSTR QueryStr, LPCTSTR Type, long MaxResults);
	long Exists(LPCTSTR QueryStr, LPCTSTR Type);
	CString FindPatient(LPCTSTR PatientID, LPCTSTR Organziation);
	CString FindExam(LPCTSTR Accession, LPCTSTR PatientID, LPCTSTR Organization);
	CString GetReportData(LPCTSTR IntPatientID, LPCTSTR IntExamID);
	long GetLastErrorCode();
	CString FindStudy(LPCTSTR StudyUID);
	VARIANT InternalExecute(LPCTSTR FnName, LPCTSTR Param1, LPCTSTR Param2, LPCTSTR Param3);
	BOOL ChangePassword(LPCTSTR OldPassword, LPCTSTR NewPassword);
	CString GetCurrentUser();
	BOOL LockExam(LPCTSTR IntExamID, long Enable);
	BOOL MarkExamRead(LPCTSTR IntExamID, long bMarkReadFlg);
	BOOL SetPreference(LPCTSTR Name, LPCTSTR Type, LPCTSTR Data);
	CString GetPreference(LPCTSTR Name, LPCTSTR Type);
	CString GetWorkstationLocations();
	CString GetAuthSources();
	BOOL EmergencyAccessLogin(LPCTSTR UserName, LPCTSTR Password, LPCTSTR AuthSource, LPCTSTR Token, LPCTSTR Mnemonic);
	CString GetCachedExams();
	BOOL CacheExam(LPCTSTR bstrIntExamID, LPCTSTR bstrIntExcpID, BOOL bLockExam);
	BOOL ResumeCachingExam(LPCTSTR bstrIntExamID, LPCTSTR bstrIntExcpID);
	BOOL CancelExamCaching(LPCTSTR bstrIntExamID, LPCTSTR bstrIntExcpID);
	BOOL DeleteCachedExam(LPCTSTR bstrIntExamID, LPCTSTR bstrIntExcpID);
	void DisableAutologout(BOOL bDisable);
	BOOL ShowDebugWindow();
	CString GetFoldersAndFiltersXML();
	CString GetVersion();
	CString FindException(LPCTSTR StudyUID);
	CString QueryEx(LPCTSTR Query, LPCTSTR Type, LPCTSTR PrimarySort, long PrimarySortDir, LPCTSTR SecondarySort, long SecondSortDir, long MaxResults);
	VARIANT GetImageHeaders(LPCTSTR bstrStudyID, LPCTSTR bstrSeriesID, LPCTSTR bstrImageID);
	VARIANT GetViewPixels(LPCTSTR bstrStudyID, LPCTSTR bstrSeriesID, LPCTSTR bstrImageID, long nLeft, long nTop, long nRight, long nBottom, long nCompressionRatio);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_ISITENONVISUAL_H__28D22B36_7376_4372_93B0_1F2DD595C56D__INCLUDED_)
